{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HIRITHIK RAJ\\\\Desktop\\\\Sem 7\\\\Capstone Project\\\\Safe\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\Components\\\\Prediction\\\\Prediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prediction = () => {\n  _s();\n  const [year, setYear] = useState('');\n  const [predictions, setPredictions] = useState([]);\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Call backend to get predictions for the entered year\n      const response = await axios.post('http://localhost:5000/api/v1/predict-expenses', {\n        year\n      });\n      setPredictions(response.data.predictions); // Assuming backend returns predictions in `data.predictions`\n    } catch (error) {\n      console.error(\"Error fetching predictions\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Budget Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        children: \"Enter Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"year\",\n        value: year,\n        onChange: e => setYear(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), predictions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Predicted Monthly Expenses for \", year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Predicted Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: predictions.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.amount.toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Prediction, \"L6xw0FYuDYmzQSzpVcIVoPLZBss=\");\n_c = Prediction;\nexport default Prediction;\nvar _c;\n$RefreshReg$(_c, \"Prediction\");","map":{"version":3,"names":["React","useState","axios","Prediction","year","setYear","predictions","setPredictions","handleSubmit","e","preventDefault","response","post","data","error","console","target","value","length","map","item","index","month","category","amount","toFixed"],"sources":["C:/Users/HIRITHIK RAJ/Desktop/Sem 7/Capstone Project/Safe/expense-tracker_fullstack/frontend/src/Components/Prediction/Prediction.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Prediction = () => {\r\n    const [year, setYear] = useState('');\r\n    const [predictions, setPredictions] = useState([]);\r\n\r\n    // Handle form submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            // Call backend to get predictions for the entered year\r\n            const response = await axios.post('http://localhost:5000/api/v1/predict-expenses', { year });\r\n            setPredictions(response.data.predictions); // Assuming backend returns predictions in `data.predictions`\r\n        } catch (error) {\r\n            console.error(\"Error fetching predictions\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Budget Prediction</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"year\">Enter Year:</label>\r\n                <input\r\n                    type=\"number\"\r\n                    id=\"year\"\r\n                    value={year}\r\n                    onChange={(e) => setYear(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Predict</button>\r\n            </form>\r\n\r\n            {predictions.length > 0 && (\r\n                <div>\r\n                    <h3>Predicted Monthly Expenses for {year}</h3>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Month</th>\r\n                                <th>Category</th>\r\n                                <th>Predicted Amount</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {predictions.map((item, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{item.month}</td>\r\n                                    <td>{item.category}</td>\r\n                                    <td>{item.amount.toFixed(2)}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Prediction;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,UAAU,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,+CAA+C,EAAE;QAAER;MAAK,CAAC,CAAC;MAC5FG,cAAc,CAACI,QAAQ,CAACE,IAAI,CAACP,WAAW,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,UAAI;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC1B;MAAM,QAAQ,EAAEN,YAAa;MAAA,wBACzB;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAQ,eACzC;QACI,IAAI,EAAC,QAAQ;QACb,EAAE,EAAC,MAAM;QACT,KAAK,EAAEJ,IAAK;QACZ,QAAQ,EAAGK,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACO,MAAM,CAACC,KAAK,CAAE;QACzC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACV,eACF;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACnC,EAENX,WAAW,CAACY,MAAM,GAAG,CAAC,iBACnB;MAAA,wBACI;QAAA,WAAI,iCAA+B,EAACd,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAC9C;QAAA,wBACI;UAAA,uBACI;YAAA,wBACI;cAAA,UAAI;YAAK;cAAA;cAAA;cAAA;YAAA,QAAK,eACd;cAAA,UAAI;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAK,eACjB;cAAA,UAAI;YAAgB;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA;QACxB;UAAA;UAAA;UAAA;QAAA,QACD,eACR;UAAA,UACKE,WAAW,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzB;YAAA,wBACI;cAAA,UAAKD,IAAI,CAACE;YAAK;cAAA;cAAA;cAAA;YAAA,QAAM,eACrB;cAAA,UAAKF,IAAI,CAACG;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAM,eACxB;cAAA,UAAKH,IAAI,CAACI,MAAM,CAACC,OAAO,CAAC,CAAC;YAAC;cAAA;cAAA;cAAA;YAAA,QAAM;UAAA,GAH5BJ,KAAK;YAAA;YAAA;YAAA;UAAA,QAKjB;QAAC;UAAA;UAAA;UAAA;QAAA,QACE;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAEf;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAC,GAxDIlB,UAAU;AAAA,KAAVA,UAAU;AA0DhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}