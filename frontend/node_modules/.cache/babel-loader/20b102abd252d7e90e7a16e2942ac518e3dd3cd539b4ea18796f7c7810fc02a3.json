{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HIRITHIK RAJ\\\\Desktop\\\\Sem 7\\\\Capstone Project\\\\Safe\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\Components\\\\Graph\\\\Graph.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport axios from 'axios';\n\n// Registering Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Graph = () => {\n  _s();\n  const [chartData, setChartData] = useState({});\n\n  // Fetch data for the graph from the backend\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/v1/get-expenses'); // Update API endpoint if needed\n        const expenses = response.data;\n\n        // Process the data to group expenses by category and calculate daily totals\n        const categories = [];\n        const amounts = [];\n        expenses.forEach(expense => {\n          const date = new Date(expense.date);\n          const day = date.getDate(); // Extract day from date\n          const category = expense.category;\n          const amount = expense.amount;\n\n          // Group data by category and date\n          if (!categories.includes(category)) {\n            categories.push(category);\n            amounts.push({\n              category,\n              amount: 0\n            });\n          }\n          const categoryIndex = categories.indexOf(category);\n          amounts[categoryIndex].amount += amount;\n        });\n\n        // Set chart data\n        setChartData({\n          labels: categories,\n          datasets: [{\n            label: 'Expenditure by Category',\n            data: amounts.map(item => item.amount),\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        });\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expenditure on Particular Day by Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"qLlYZUJv3crif/0xI+dehEQf0o0=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","axios","register","Graph","chartData","setChartData","fetchData","response","get","expenses","data","categories","amounts","forEach","expense","date","Date","day","getDate","category","amount","includes","push","categoryIndex","indexOf","labels","datasets","label","map","item","backgroundColor","borderColor","borderWidth","error","console"],"sources":["C:/Users/HIRITHIK RAJ/Desktop/Sem 7/Capstone Project/Safe/expense-tracker_fullstack/frontend/src/Components/Graph/Graph.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport axios from 'axios';\r\n\r\n// Registering Chart.js components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Graph = () => {\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  // Fetch data for the graph from the backend\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/v1/get-expenses'); // Update API endpoint if needed\r\n        const expenses = response.data;\r\n\r\n        // Process the data to group expenses by category and calculate daily totals\r\n        const categories = [];\r\n        const amounts = [];\r\n\r\n        expenses.forEach(expense => {\r\n          const date = new Date(expense.date);\r\n          const day = date.getDate(); // Extract day from date\r\n          const category = expense.category;\r\n          const amount = expense.amount;\r\n\r\n          // Group data by category and date\r\n          if (!categories.includes(category)) {\r\n            categories.push(category);\r\n            amounts.push({ category, amount: 0 });\r\n          }\r\n\r\n          const categoryIndex = categories.indexOf(category);\r\n          amounts[categoryIndex].amount += amount;\r\n        });\r\n\r\n        // Set chart data\r\n        setChartData({\r\n          labels: categories,\r\n          datasets: [\r\n            {\r\n              label: 'Expenditure by Category',\r\n              data: amounts.map(item => item.amount),\r\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n              borderColor: 'rgba(75, 192, 192, 1)',\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Expenditure on Particular Day by Category</h2>\r\n      <Bar data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAC3G,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA;AACAP,OAAO,CAACQ,QAAQ,CAACP,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,MAAMG,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,2CAA2C,CAAC,CAAC,CAAC;QAC/E,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,IAAI;;QAE9B;QACA,MAAMC,UAAU,GAAG,EAAE;QACrB,MAAMC,OAAO,GAAG,EAAE;QAElBH,QAAQ,CAACI,OAAO,CAACC,OAAO,IAAI;UAC1B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC;UACnC,MAAME,GAAG,GAAGF,IAAI,CAACG,OAAO,EAAE,CAAC,CAAC;UAC5B,MAAMC,QAAQ,GAAGL,OAAO,CAACK,QAAQ;UACjC,MAAMC,MAAM,GAAGN,OAAO,CAACM,MAAM;;UAE7B;UACA,IAAI,CAACT,UAAU,CAACU,QAAQ,CAACF,QAAQ,CAAC,EAAE;YAClCR,UAAU,CAACW,IAAI,CAACH,QAAQ,CAAC;YACzBP,OAAO,CAACU,IAAI,CAAC;cAAEH,QAAQ;cAAEC,MAAM,EAAE;YAAE,CAAC,CAAC;UACvC;UAEA,MAAMG,aAAa,GAAGZ,UAAU,CAACa,OAAO,CAACL,QAAQ,CAAC;UAClDP,OAAO,CAACW,aAAa,CAAC,CAACH,MAAM,IAAIA,MAAM;QACzC,CAAC,CAAC;;QAEF;QACAf,YAAY,CAAC;UACXoB,MAAM,EAAEd,UAAU;UAClBe,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,yBAAyB;YAChCjB,IAAI,EAAEE,OAAO,CAACgB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACT,MAAM,CAAC;YACtCU,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,uBAAuB;YACpCC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAED3B,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE;MAAA,UAAI;IAAyC;MAAA;MAAA;MAAA;IAAA,QAAK,eAClD,QAAC,GAAG;MAAC,IAAI,EAAEF;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpB;AAEV,CAAC;AAAC,GAzDID,KAAK;AAAA,KAALA,KAAK;AA2DX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}