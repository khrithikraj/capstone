{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HIRITHIK RAJ\\\\Desktop\\\\Sem 7\\\\Capstone Project\\\\Safe\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\Components\\\\PredictionPage\\\\PredictionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictionPage = () => {\n  _s();\n  const [year, setYear] = useState('');\n  const [predictions, setPredictions] = useState([]);\n  const [error, setError] = useState('');\n\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!year || isNaN(year)) {\n      setError('Please enter a valid year');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/v1/predict-expenses', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          year\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPredictions(data); // Store predictions in the state\n        setError('');\n      } else {\n        setError('Failed to fetch predictions');\n      }\n    } catch (error) {\n      setError('Error occurred while fetching predictions');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Expense Predictions for Year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter year\",\n        value: year,\n        onChange: e => setYear(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Predictions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), predictions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Predictions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: predictions.map((prediction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: prediction.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), \" - \", prediction.category, \": \", prediction.prediction]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PredictionPage, \"A+lpxUtlpSKn+jf+npNhLha1vkc=\");\n_c = PredictionPage;\nexport default PredictionPage;\nvar _c;\n$RefreshReg$(_c, \"PredictionPage\");","map":{"version":3,"names":["React","useState","PredictionPage","year","setYear","predictions","setPredictions","error","setError","handleSubmit","e","preventDefault","isNaN","response","fetch","method","headers","body","JSON","stringify","ok","data","json","target","value","color","length","map","prediction","index","month","category"],"sources":["C:/Users/HIRITHIK RAJ/Desktop/Sem 7/Capstone Project/Safe/expense-tracker_fullstack/frontend/src/Components/PredictionPage/PredictionPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PredictionPage = () => {\r\n  const [year, setYear] = useState('');\r\n  const [predictions, setPredictions] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!year || isNaN(year)) {\r\n      setError('Please enter a valid year');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/v1/predict-expenses', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ year }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setPredictions(data); // Store predictions in the state\r\n        setError('');\r\n      } else {\r\n        setError('Failed to fetch predictions');\r\n      }\r\n    } catch (error) {\r\n      setError('Error occurred while fetching predictions');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Expense Predictions for Year</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter year\"\r\n          value={year}\r\n          onChange={(e) => setYear(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Get Predictions</button>\r\n      </form>\r\n\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      {predictions.length > 0 && (\r\n        <div>\r\n          <h2>Predictions:</h2>\r\n          <ul>\r\n            {predictions.map((prediction, index) => (\r\n              <li key={index}>\r\n                <strong>{prediction.month}</strong> - {prediction.category}: {prediction.prediction}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PredictionPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,EAAE;IAElB,IAAI,CAACR,IAAI,IAAIS,KAAK,CAACT,IAAI,CAAC,EAAE;MACxBK,QAAQ,CAAC,2BAA2B,CAAC;MACrC;IACF;IAEA,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;QAC5EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEhB;QAAK,CAAC;MAC/B,CAAC,CAAC;MAEF,IAAIU,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;QAClChB,cAAc,CAACe,IAAI,CAAC,CAAC,CAAC;QACtBb,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,MAAM;QACLA,QAAQ,CAAC,6BAA6B,CAAC;MACzC;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdC,QAAQ,CAAC,2CAA2C,CAAC;IACvD;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UAAI;IAA4B;MAAA;MAAA;MAAA;IAAA,QAAK,eACrC;MAAM,QAAQ,EAAEC,YAAa;MAAA,wBAC3B;QACE,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,YAAY;QACxB,KAAK,EAAEN,IAAK;QACZ,QAAQ,EAAGO,CAAC,IAAKN,OAAO,CAACM,CAAC,CAACa,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACzC,eACF;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACzC,EAENjB,KAAK,iBAAI;MAAG,KAAK,EAAE;QAAEkB,KAAK,EAAE;MAAM,CAAE;MAAA,UAAElB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,EAEhDF,WAAW,CAACqB,MAAM,GAAG,CAAC,iBACrB;MAAA,wBACE;QAAA,UAAI;MAAY;QAAA;QAAA;QAAA;MAAA,QAAK,eACrB;QAAA,UACGrB,WAAW,CAACsB,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACjC;UAAA,wBACE;YAAA,UAASD,UAAU,CAACE;UAAK;YAAA;YAAA;YAAA;UAAA,QAAU,OAAG,EAACF,UAAU,CAACG,QAAQ,EAAC,IAAE,EAACH,UAAU,CAACA,UAAU;QAAA,GAD5EC,KAAK;UAAA;UAAA;UAAA;QAAA,QAGf;MAAC;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA,QAER;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAhEI3B,cAAc;AAAA,KAAdA,cAAc;AAkEpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}