{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HIRITHIK RAJ\\\\Desktop\\\\Sem 7\\\\Capstone Project\\\\Safe\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\Components\\\\Graph\\\\Graph.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport axios from 'axios';\n\n// Register chart components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Graph = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [chartData, setChartData] = useState({});\n  useEffect(() => {\n    // Fetch the data for a particular day (you can modify the date as per requirement)\n    const fetchData = async () => {\n      try {\n        const res = await axios.get('http://localhost:3000/api/v1/get-expenses'); // Adjust the endpoint as needed\n        const expenses = res.data;\n        setExpenses(expenses);\n        prepareChartData(expenses);\n      } catch (error) {\n        console.error('Error fetching expenses:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const prepareChartData = expenses => {\n    // Group expenses by category\n    const groupedExpenses = expenses.reduce((acc, expense) => {\n      const date = new Date(expense.date).toLocaleDateString(); // Adjust date format as needed\n      if (date === '11/06/2024') {\n        // Replace this with the target date you want to display\n        const category = expense.category;\n        if (!acc[category]) {\n          acc[category] = 0;\n        }\n        acc[category] += expense.amount;\n      }\n      return acc;\n    }, {});\n\n    // Prepare chart data\n    const categories = Object.keys(groupedExpenses);\n    const amounts = categories.map(category => groupedExpenses[category]);\n    setChartData({\n      labels: categories,\n      datasets: [{\n        label: 'Expenditure by Category',\n        data: amounts,\n        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n        borderColor: 'rgba(255, 99, 132, 1)',\n        borderWidth: 1\n      }]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expenditure on a Particular Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), chartData.labels ? /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: {\n        responsive: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Graph, \"7W8/V6J/uBei2Eplg6XPIrxDE2c=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","axios","register","Graph","expenses","setExpenses","chartData","setChartData","fetchData","res","get","data","prepareChartData","error","console","groupedExpenses","reduce","acc","expense","date","Date","toLocaleDateString","category","amount","categories","Object","keys","amounts","map","labels","datasets","label","backgroundColor","borderColor","borderWidth","responsive"],"sources":["C:/Users/HIRITHIK RAJ/Desktop/Sem 7/Capstone Project/Safe/expense-tracker_fullstack/frontend/src/Components/Graph/Graph.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport axios from 'axios';\r\n\r\n// Register chart components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Graph = () => {\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [chartData, setChartData] = useState({});\r\n    \r\n    useEffect(() => {\r\n        // Fetch the data for a particular day (you can modify the date as per requirement)\r\n        const fetchData = async () => {\r\n            try {\r\n                const res = await axios.get('http://localhost:3000/api/v1/get-expenses'); // Adjust the endpoint as needed\r\n                const expenses = res.data;\r\n\r\n                setExpenses(expenses);\r\n                prepareChartData(expenses);\r\n            } catch (error) {\r\n                console.error('Error fetching expenses:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const prepareChartData = (expenses) => {\r\n        // Group expenses by category\r\n        const groupedExpenses = expenses.reduce((acc, expense) => {\r\n            const date = new Date(expense.date).toLocaleDateString(); // Adjust date format as needed\r\n            if (date === '11/06/2024') { // Replace this with the target date you want to display\r\n                const category = expense.category;\r\n                if (!acc[category]) {\r\n                    acc[category] = 0;\r\n                }\r\n                acc[category] += expense.amount;\r\n            }\r\n            return acc;\r\n        }, {});\r\n\r\n        // Prepare chart data\r\n        const categories = Object.keys(groupedExpenses);\r\n        const amounts = categories.map((category) => groupedExpenses[category]);\r\n\r\n        setChartData({\r\n            labels: categories,\r\n            datasets: [\r\n                {\r\n                    label: 'Expenditure by Category',\r\n                    data: amounts,\r\n                    backgroundColor: 'rgba(255, 99, 132, 0.6)',\r\n                    borderColor: 'rgba(255, 99, 132, 1)',\r\n                    borderWidth: 1,\r\n                },\r\n            ],\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Expenditure on a Particular Day</h2>\r\n            {chartData.labels ? (\r\n                <Bar data={chartData} options={{ responsive: true }} />\r\n            ) : (\r\n                <p>Loading data...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}