{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HIRITHIK RAJ\\\\Desktop\\\\Sem 7\\\\Capstone Project\\\\Safe\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\Components\\\\Graph\\\\Graph.js\",\n  _s = $RefreshSig$();\n// Components/Graph/Graph.js\n\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Graph = () => {\n  _s();\n  const [expensesData, setExpensesData] = useState([]);\n  useEffect(() => {\n    // Fetching expense data from backend\n    axios.get('http://localhost:5000/api/v1/get-expenses').then(response => {\n      setExpensesData(response.data);\n    }).catch(err => console.log(err));\n  }, []);\n  const chartData = {\n    labels: [],\n    // Categories\n    datasets: [{\n      label: 'Expenditure',\n      data: [],\n      // Amount per category\n      backgroundColor: 'rgba(255, 99, 132, 0.5)' // Set your preferred color\n    }]\n  };\n\n  // Processing the expense data to group by category\n  expensesData.forEach(expense => {\n    const categoryIndex = chartData.labels.indexOf(expense.category);\n    if (categoryIndex === -1) {\n      chartData.labels.push(expense.category);\n      chartData.datasets[0].data.push(expense.amount);\n    } else {\n      chartData.datasets[0].data[categoryIndex] += expense.amount;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expenditure by Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"dzgE0TZRUktrPzq0THf94OgAWhg=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","axios","register","Graph","expensesData","setExpensesData","get","then","response","data","catch","err","console","log","chartData","labels","datasets","label","backgroundColor","forEach","expense","categoryIndex","indexOf","category","push","amount","padding"],"sources":["C:/Users/HIRITHIK RAJ/Desktop/Sem 7/Capstone Project/Safe/expense-tracker_fullstack/frontend/src/Components/Graph/Graph.js"],"sourcesContent":["// Components/Graph/Graph.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport axios from 'axios';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Graph = () => {\r\n  const [expensesData, setExpensesData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetching expense data from backend\r\n    axios.get('http://localhost:5000/api/v1/get-expenses')\r\n      .then(response => {\r\n        setExpensesData(response.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  const chartData = {\r\n    labels: [], // Categories\r\n    datasets: [\r\n      {\r\n        label: 'Expenditure',\r\n        data: [], // Amount per category\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)', // Set your preferred color\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Processing the expense data to group by category\r\n  expensesData.forEach(expense => {\r\n    const categoryIndex = chartData.labels.indexOf(expense.category);\r\n    if (categoryIndex === -1) {\r\n      chartData.labels.push(expense.category);\r\n      chartData.datasets[0].data.push(expense.amount);\r\n    } else {\r\n      chartData.datasets[0].data[categoryIndex] += expense.amount;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Expenditure by Category</h2>\r\n      <Bar data={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAC3G,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1BP,OAAO,CAACQ,QAAQ,CAACP,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,MAAMG,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAACK,GAAG,CAAC,2CAA2C,CAAC,CACnDC,IAAI,CAACC,QAAQ,IAAI;MAChBH,eAAe,CAACG,QAAQ,CAACC,IAAI,CAAC;IAChC,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,SAAS,GAAG;IAChBC,MAAM,EAAE,EAAE;IAAE;IACZC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,aAAa;MACpBR,IAAI,EAAE,EAAE;MAAE;MACVS,eAAe,EAAE,yBAAyB,CAAE;IAC9C,CAAC;EAEL,CAAC;;EAED;EACAd,YAAY,CAACe,OAAO,CAACC,OAAO,IAAI;IAC9B,MAAMC,aAAa,GAAGP,SAAS,CAACC,MAAM,CAACO,OAAO,CAACF,OAAO,CAACG,QAAQ,CAAC;IAChE,IAAIF,aAAa,KAAK,CAAC,CAAC,EAAE;MACxBP,SAAS,CAACC,MAAM,CAACS,IAAI,CAACJ,OAAO,CAACG,QAAQ,CAAC;MACvCT,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACP,IAAI,CAACe,IAAI,CAACJ,OAAO,CAACK,MAAM,CAAC;IACjD,CAAC,MAAM;MACLX,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACP,IAAI,CAACY,aAAa,CAAC,IAAID,OAAO,CAACK,MAAM;IAC7D;EACF,CAAC,CAAC;EAEF,oBACE;IAAK,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAA,wBAC9B;MAAA,UAAI;IAAuB;MAAA;MAAA;MAAA;IAAA,QAAK,eAChC,QAAC,GAAG;MAAC,IAAI,EAAEZ;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpB;AAEV,CAAC;AAAC,GAxCIX,KAAK;AAAA,KAALA,KAAK;AA0CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}